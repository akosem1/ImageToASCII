Add-Type -AssemblyName PresentationFramework
Add-Type -AssemblyName System.Drawing
Add-Type -AssemblyName System.Windows.Forms

# יצירת XAML עבור הממשק
$xaml = @"
<Window x:Name="MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="מהפך תמונה לסימנים - Image to ASCII Converter" Height="650" Width="800"
        FlowDirection="RightToLeft" WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- כותרת -->
        <TextBlock Grid.Row="0" Text="מהפך תמונה לאמנות ASCII" FontSize="18" FontWeight="Bold" 
                   HorizontalAlignment="Center" Margin="10"/>
        
        <!-- בחירת תמונה -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
            <Button x:Name="SelectImageButton" Content="בחר תמונה" Width="100" Height="30" Margin="5"/>
            <TextBlock x:Name="ImagePathText" Text="לא נבחרה תמונה" VerticalAlignment="Center" Margin="10,0"/>
        </StackPanel>
        
        <!-- הגדרות -->
        <GroupBox Grid.Row="2" Header="הגדרות" Margin="10">
            <StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBlock Text="סימנים להמרה:" Width="120" VerticalAlignment="Center"/>
                    <TextBox x:Name="CharacterSetTextBox" Text=" .:-=+*#%@" Width="200" Height="25"/>
                    <TextBlock Text="(מחור לכהה)" Margin="10,0" VerticalAlignment="Center" FontStyle="Italic"/>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBlock Text="רוחב בתווים:" Width="120" VerticalAlignment="Center"/>
                    <Slider x:Name="WidthSlider" Minimum="50" Maximum="200" Value="80" Width="150" VerticalAlignment="Center"/>
                    <TextBlock x:Name="WidthValueText" Text="80" Width="30" VerticalAlignment="Center" Margin="5,0"/>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBlock Text="צבע רקע:" Width="120" VerticalAlignment="Center"/>
                    <Button x:Name="BackgroundColorButton" Content="שחור" Width="80" Height="25" Background="Black" Foreground="White"/>
                    <TextBlock Text="צבע גופן:" Width="80" VerticalAlignment="Center" Margin="20,0,0,0"/>
                    <Button x:Name="FontColorButton" Content="לבן" Width="80" Height="25" Background="White" Foreground="Black"/>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Button x:Name="ConvertButton" Content="המר לסימנים" Width="100" Height="30" Margin="5"/>
                    <Button x:Name="SaveButton" Content="שמור תוצאה" Width="100" Height="30" Margin="5" IsEnabled="False"/>
                    <Button x:Name="CopyButton" Content="העתק ללוח" Width="100" Height="30" Margin="5" IsEnabled="False"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        
        <!-- תוצאה -->
        <GroupBox Grid.Row="3" Header="תוצאה" Margin="10">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <TextBlock x:Name="ResultTextBlock" FontFamily="Courier New" FontSize="8" 
                          FlowDirection="LeftToRight" Background="Black" Foreground="White" Padding="5"/>
            </ScrollViewer>
        </GroupBox>
        
        <!-- סרגל סטטוס -->
        <StatusBar Grid.Row="4">
            <TextBlock x:Name="StatusText" Text="מוכן להמרה"/>
        </StatusBar>
    </Grid>
</Window>
"@

# טעינת XAML
$reader = [System.Xml.XmlReader]::Create([System.IO.StringReader]::new($xaml))
$window = [System.Windows.Markup.XamlReader]::Load($reader)

# קבלת אלמנטים מהממשק
$selectImageButton = $window.FindName("SelectImageButton")
$imagePathText = $window.FindName("ImagePathText")
$characterSetTextBox = $window.FindName("CharacterSetTextBox")
$widthSlider = $window.FindName("WidthSlider")
$widthValueText = $window.FindName("WidthValueText")
$backgroundColorButton = $window.FindName("BackgroundColorButton")
$fontColorButton = $window.FindName("FontColorButton")
$convertButton = $window.FindName("ConvertButton")
$saveButton = $window.FindName("SaveButton")
$copyButton = $window.FindName("CopyButton")
$resultTextBlock = $window.FindName("ResultTextBlock")
$statusText = $window.FindName("StatusText")

# משתנים גלובליים
$selectedImagePath = $null
$asciiResult = $null
$selectedBackgroundColor = "Black"
$selectedFontColor = "White"

# פונקציה לפתיחת בורר צבעים
function Show-ColorPicker {
    param([string]$CurrentColor)
    
    $colorDialog = New-Object System.Windows.Forms.ColorDialog
    $colorDialog.AllowFullOpen = $true
    $colorDialog.FullOpen = $true
    
    # המרת צבע נוכחי אם קיים
    try {
        $color = [System.Drawing.ColorTranslator]::FromHtml($CurrentColor)
        $colorDialog.Color = $color
    } catch {
        # אם הצבע לא חוקי, נשתמש בשחור
        $colorDialog.Color = [System.Drawing.Color]::Black
    }
    
    if ($colorDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
        $selectedColor = $colorDialog.Color
        $colorHex = "#{0:X2}{1:X2}{2:X2}" -f $selectedColor.R, $selectedColor.G, $selectedColor.B
        return @{
            Name = $selectedColor.Name
            Hex = $colorHex
            Color = $selectedColor
        }
    }
    return $null
}

# פונקציה להמרת תמונה ל-ASCII
function Convert-ImageToAscii {
    param(
        [string]$ImagePath,
        [string]$CharacterSet,
        [int]$Width
    )
    
    try {
        # טעינת התמונה
        $bitmap = [System.Drawing.Bitmap]::new($ImagePath)
        
        # חישוב גובה יחסי
        $aspectRatio = $bitmap.Height / $bitmap.Width
        $height = [int]($Width * $aspectRatio * 0.5) # 0.5 כדי לתקן את יחס הגובה של תווים
        
        # יצירת תמונה מוקטנת
        $resizedBitmap = New-Object System.Drawing.Bitmap($Width, $height)
        $graphics = [System.Drawing.Graphics]::FromImage($resizedBitmap)
        $graphics.DrawImage($bitmap, 0, 0, $Width, $height)
        
        # המרה ל-ASCII
        $asciiArt = ""
        $charArray = $CharacterSet.ToCharArray()
        
        for ($y = 0; $y -lt $height; $y++) {
            for ($x = 0; $x -lt $width; $x++) {
                $pixel = $resizedBitmap.GetPixel($x, $y)
                # חישוב בהירות הפיקסל
                $brightness = ($pixel.R * 0.299 + $pixel.G * 0.587 + $pixel.B * 0.114) / 255
                # בחירת התו המתאים
                $charIndex = [Math]::Floor($brightness * ($charArray.Length - 1))
                $asciiArt += $charArray[$charIndex]
            }
            $asciiArt += "`n"
        }
        
        # ניקוי זיכרון
        $graphics.Dispose()
        $resizedBitmap.Dispose()
        $bitmap.Dispose()
        
        return $asciiArt
    }
    catch {
        throw "שגיאה בהמרת התמונה: $($_.Exception.Message)"
    }
}

# אירועי הממשק
$selectImageButton.Add_Click({
    $openFileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $openFileDialog.Filter = "Image Files|*.jpg;*.jpeg;*.png;*.bmp;*.gif"
    $openFileDialog.Title = "בחר תמונה להמרה"
    
    if ($openFileDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
        $script:selectedImagePath = $openFileDialog.FileName
        $imagePathText.Text = [System.IO.Path]::GetFileName($selectedImagePath)
        $convertButton.IsEnabled = $true
        $statusText.Text = "תמונה נבחרה: " + [System.IO.Path]::GetFileName($selectedImagePath)
    }
})

$widthSlider.Add_ValueChanged({
    $widthValueText.Text = [int]$widthSlider.Value
})

$backgroundColorButton.Add_Click({
    $colorResult = Show-ColorPicker -CurrentColor $selectedBackgroundColor
    if ($colorResult) {
        $script:selectedBackgroundColor = $colorResult.Hex
        $backgroundColorButton.Background = $colorResult.Hex
        $backgroundColorButton.Content = $colorResult.Name
        $resultTextBlock.Background = $colorResult.Hex
        
        # התאמת צבע הטקסט של הכפתור לפי בהירות הרקע
        $brightness = ($colorResult.Color.R * 0.299 + $colorResult.Color.G * 0.587 + $colorResult.Color.B * 0.114)
        if ($brightness -gt 128) {
            $backgroundColorButton.Foreground = "Black"
        } else {
            $backgroundColorButton.Foreground = "White"
        }
    }
})

$fontColorButton.Add_Click({
    $colorResult = Show-ColorPicker -CurrentColor $selectedFontColor
    if ($colorResult) {
        $script:selectedFontColor = $colorResult.Hex
        $fontColorButton.Background = $colorResult.Hex
        $fontColorButton.Content = $colorResult.Name
        $resultTextBlock.Foreground = $colorResult.Hex
        
        # התאמת צבע הטקסט של הכפתור לפי בהירות הרקע
        $brightness = ($colorResult.Color.R * 0.299 + $colorResult.Color.G * 0.587 + $colorResult.Color.B * 0.114)
        if ($brightness -gt 128) {
            $fontColorButton.Foreground = "Black"
        } else {
            $fontColorButton.Foreground = "White"
        }
    }
})

$convertButton.Add_Click({
    if (-not $selectedImagePath) {
        [System.Windows.MessageBox]::Show("אנא בחר תמונה קודם", "שגיאה", "OK", "Warning")
        return
    }
    
    $characterSet = $characterSetTextBox.Text
    if ([string]::IsNullOrWhiteSpace($characterSet)) {
        [System.Windows.MessageBox]::Show("אנא הכנס סימנים להמרה", "שגיאה", "OK", "Warning")
        return
    }
    
    try {
        $statusText.Text = "מבצע המרה..."
        $convertButton.IsEnabled = $false
        
        # עדכון הממשק
        $window.Dispatcher.Invoke([System.Windows.Threading.DispatcherPriority]::Background, [System.Action]{})
        
        $width = [int]$widthSlider.Value
        $script:asciiResult = Convert-ImageToAscii -ImagePath $selectedImagePath -CharacterSet $characterSet -Width $width
        
        $resultTextBlock.Text = $asciiResult
        $resultTextBlock.Background = $selectedBackgroundColor
        $resultTextBlock.Foreground = $selectedFontColor
        $saveButton.IsEnabled = $true
        $copyButton.IsEnabled = $true
        $statusText.Text = "ההמרה הושלמה בהצלחה!"
    }
    catch {
        [System.Windows.MessageBox]::Show("שגיאה בהמרה: $($_.Exception.Message)", "שגיאה", "OK", "Error")
        $statusText.Text = "שגיאה בהמרה"
    }
    finally {
        $convertButton.IsEnabled = $true
    }
})

$saveButton.Add_Click({
    if (-not $asciiResult) { return }
    
    $saveFileDialog = New-Object System.Windows.Forms.SaveFileDialog
    $saveFileDialog.Filter = "Text Files|*.txt"
    $saveFileDialog.Title = "שמור תוצאת ASCII"
    $saveFileDialog.FileName = "ascii_art.txt"
    
    if ($saveFileDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
        try {
            [System.IO.File]::WriteAllText($saveFileDialog.FileName, $asciiResult, [System.Text.Encoding]::UTF8)
            $statusText.Text = "הקובץ נשמר בהצלחה: " + [System.IO.Path]::GetFileName($saveFileDialog.FileName)
        }
        catch {
            [System.Windows.MessageBox]::Show("שגיאה בשמירת הקובץ: $($_.Exception.Message)", "שגיאה", "OK", "Error")
        }
    }
})

$copyButton.Add_Click({
    if (-not $asciiResult) { return }
    
    try {
        [System.Windows.Clipboard]::SetText($asciiResult)
        $statusText.Text = "התוצאה הועתקה ללוח!"
    }
    catch {
        [System.Windows.MessageBox]::Show("שגיאה בהעתקה ללוח", "שגיאה", "OK", "Error")
    }
})

# הצגת החלון
$window.ShowDialog() | Out-Null
